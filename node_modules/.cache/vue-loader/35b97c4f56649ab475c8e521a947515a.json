{"remainingRequest":"F:\\个人健康管理系统\\脚手架\\personal-heath-view\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\个人健康管理系统\\脚手架\\personal-heath-view\\src\\views\\admin\\HealthModelConfigManage.vue?vue&type=style&index=0&id=94c0ccec&scoped=true&lang=scss&","dependencies":[{"path":"F:\\个人健康管理系统\\脚手架\\personal-heath-view\\src\\views\\admin\\HealthModelConfigManage.vue","mtime":1730985718829},{"path":"F:\\个人健康管理系统\\脚手架\\personal-heath-view\\node_modules\\css-loader\\dist\\cjs.js","mtime":1728584437452},{"path":"F:\\个人健康管理系统\\脚手架\\personal-heath-view\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1728584496804},{"path":"F:\\个人健康管理系统\\脚手架\\personal-heath-view\\node_modules\\postcss-loader\\src\\index.js","mtime":1728584450750},{"path":"F:\\个人健康管理系统\\脚手架\\personal-heath-view\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1728584435966},{"path":"F:\\个人健康管理系统\\脚手架\\personal-heath-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1728584431602},{"path":"F:\\个人健康管理系统\\脚手架\\personal-heath-view\\node_modules\\vue-loader\\lib\\index.js","mtime":1728584477299}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQoudGFnLXRpcCB7DQogIGRpc3BsYXk6IGlubGluZS1ibG9jazsNCiAgcGFkZGluZzogNXB4IDEwcHg7DQogIGJvcmRlci1yYWRpdXM6IDVweDsNCiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDI0NSwgMjQ1LCAyNDUpOw0KICBjb2xvcjogcmdiKDEwNCwgMTE4LCAxMzApOw0KfQ0KDQouaW5wdXQtZGVmIHsNCiAgaGVpZ2h0OiA0MHB4Ow0KICBsaW5lLWhlaWdodDogNDBweDsNCiAgb3V0bGluZTogbm9uZTsNCiAgYm9yZGVyOiBub25lOw0KICBmb250LXNpemU6IDIwcHg7DQogIGNvbG9yOiByZ2IoMTAyLCAxMDIsIDEwMik7DQogIGZvbnQtd2VpZ2h0OiA5MDA7DQogIHdpZHRoOiAxMDAlOw0KfQ0KDQouZGlhbG9nLWZvb3RlciB7DQogIC8qIOS9v+aMiemSruawtOW5s+WxheS4rSAqLw0KICBkaXNwbGF5OiBmbGV4Ow0KICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsNCiAgYWxpZ24taXRlbXM6IGNlbnRlcjsNCn0NCg0KLyog5aaC5p6c6ZyA6KaB6LCD5pW05oyJ6ZKu5LmL6Ze055qE6Ze06LedICovDQouY3VzdG9tZXIgew0KICBtYXJnaW46IDAgOHB4Ow0KICAvKiDmoLnmja7pnIDopoHosIPmlbTpl7Tot50gKi8NCn0NCg=="},{"version":3,"sources":["HealthModelConfigManage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoVA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"HealthModelConfigManage.vue","sourceRoot":"src/views/admin","sourcesContent":["<template>\r\n  <el-row style=\"background-color: #FFFFFF;padding: 10px 0;border-radius: 5px;\">\r\n    <el-row style=\"padding: 10px 0 20px;border-bottom: 1px solid #f1f1f1;margin: 0 10px;\">\r\n      <el-row>\r\n        <span class=\"top-bar\">健康模型标题</span>\r\n        <el-input size=\"small\" style=\"width: 188px;\" v-model=\"healthModelConfigQueryDto.name\" placeholder=\"输入处\" clearable\r\n                  @clear=\"handleFilterClear\">\r\n        </el-input>\r\n        <span class=\"top-bar\">模型简介</span>\r\n        <el-input size=\"small\" style=\"width: 188px;\" v-model=\"healthModelConfigQueryDto.detail\" placeholder=\"输入处\" clearable\r\n                  @clear=\"handleFilterClear\">\r\n        </el-input>\r\n        <span class=\"top-bar\">模型单位</span>\r\n        <el-input size=\"small\" style=\"width: 188px;\" v-model=\"healthModelConfigQueryDto.unit\" placeholder=\"输入处\" clearable\r\n                  @clear=\"handleFilterClear\">\r\n        </el-input>\r\n        <span class=\"top-bar\">模型符号</span>\r\n        <el-input size=\"small\" style=\"width: 188px;\" v-model=\"healthModelConfigQueryDto.symbol\" placeholder=\"输入处\" clearable\r\n                  @clear=\"handleFilterClear\">\r\n        </el-input>\r\n        <span class=\"top-bar\">注册时间</span>\r\n        <el-date-picker size=\"small\" style=\"margin-left: 10px;width: 220px;\" v-model=\"searchTime\"\r\n                        type=\"daterange\" range-separator=\"至\" start-placeholder=\"开始时间\" end-placeholder=\"结束时间\">\r\n        </el-date-picker>\r\n        <el-button size=\"small\" class=\"customer\"\r\n                   style=\"margin-left: 20px;background-color: rgb(43, 121, 203);border: none;\" type=\"primary\"\r\n                   @click=\"handleFilter\">立即查询</el-button>\r\n        <el-button size=\"small\" class=\"customer reset\"\r\n                   style=\"background-color: #f1f1f1;border: none;color: #909399;border: 1px solid #f1f1f1;\" type=\"info\"\r\n                   @click=\"resetQueryCondition\">条件重置</el-button>\r\n        <el-button size=\"small\" style=\"background-color: rgb(43, 121, 203);border: none;\" class=\"customer\"\r\n                   type=\"info\" @click=\"add()\">新增健康模型</el-button>\r\n        <el-button size=\"small\" class=\"customer\"\r\n                   :style=\"{ marginLeft: '10px', backgroundColor: selectedRows.length ? '#a7535a' : '#F1F1F1', border: 'none', color: selectedRows.length ? '#FFFFFF' : '#909399' }\"\r\n                   type=\"danger\" @click=\"batchDelete()\">批量删除</el-button>\r\n      </el-row>\r\n    </el-row>\r\n    <el-row style=\"margin: 10px;\">\r\n      <el-table row-key=\"id\" @selection-change=\"handleSelectionChange\" :data=\"tableData\" style=\"width: 100%\">\r\n        <el-table-column prop=\"cover\" width=\"138\" label=\"封面\">\r\n          <template slot-scope=\"scope\">\r\n            <img :src=\"scope.row.cover\" style=\"width: 88px;height: 54px;border-radius: 5px;\"/>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"name\" width=\"218\" label=\"健康模型名\"></el-table-column>\r\n        <el-table-column prop=\"detail\" width=\"188\" label=\"模型简介\"></el-table-column>\r\n        <el-table-column prop=\"valueRange\" width=\"150\" label=\"值范围\"></el-table-column>\r\n        <el-table-column prop=\"unit\" width=\"88\" label=\"模型单位\"></el-table-column>\r\n        <el-table-column prop=\"symbol\" width=\"88\" label=\"模型符号\"></el-table-column>\r\n        <el-table-column label=\"操作\">\r\n          <template slot-scope=\"scope\">\r\n            <span class=\"text-button\" @click=\"handleEdit(scope.row)\">编辑</span>\r\n            <span class=\"text-button\" @click=\"handleDelete(scope.row)\">删除</span>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <el-pagination style=\"margin: 20px 0;\" @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\"\r\n                     :current-page=\"currentPage\" :page-sizes=\"[5, 7]\" :page-size=\"pageSize\"\r\n                     layout=\"total, sizes, prev, pager, next, jumper\" :total=\"totalItems\"></el-pagination>\r\n    </el-row>\r\n    <el-dialog :show-close=\"false\" :visible.sync=\"dialogUserOperaion\" width=\"50%\">\r\n      <div slot=\"title\">\r\n        <p class=\"dialog-title\">{{ !isOperation ? '新增新健康模型' : '编辑健康模型信息' }}</p>\r\n      </div>\r\n      <div style=\"padding:0 20px;\">\r\n        <el-row>\r\n          <span class=\"dialog-hover\">图标</span>\r\n          <el-upload class=\"avatar-uploader\" action=\"/api/personal-heath/v1.0/file/upload\"\r\n                     :show-file-list=\"false\" :on-success=\"handleAvatarSuccess\">\r\n            <img v-if=\"data.cover\" :src=\"data.cover\" class=\"dialog-avatar\">\r\n            <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n          </el-upload>\r\n        </el-row>\r\n        <el-row style=\"margin: 12px 0px\">\r\n          <span class=\"dialog-hover\">模型名</span>\r\n          <input class=\"dialog-input\" v-model=\"data.name\" placeholder=\"模型名\" />\r\n        </el-row>\r\n        <el-row style=\"margin: 12px 0px\">\r\n          <span class=\"dialog-hover\">模型简介</span>\r\n          <el-input\r\n              type=\"textarea\"\r\n              :autosize=\"{ minRows: 2, maxRows: 4}\"\r\n              placeholder=\"简介\"\r\n              v-model=\"data.detail\">\r\n          </el-input>\r\n          <el-row style=\"margin: 12px 0px\">\r\n            <span class=\"dialog-hover\">配置模型单位</span>\r\n            <input class=\"dialog-input\" v-model=\"data.unit\" placeholder=\"配置模型单位\" />\r\n          </el-row>\r\n          <el-row style=\"margin: 12px 0px\">\r\n            <span class=\"dialog-hover\">用户模型符号</span>\r\n            <input class=\"dialog-input\" v-model=\"data.symbol\" placeholder=\"用户模型符号\" />\r\n          </el-row>\r\n          <el-row style=\"margin: 12px 0px\">\r\n            <span class=\"dialog-hover\">正常范围</span>\r\n            <template>\r\n              <div >\r\n                <el-input-number\r\n                    v-model=\"valuesRange[0]\"\r\n                    :min=\"Number(valuesRange[0])\"\r\n                    :max=\"Number(valuesRange[1])\"\r\n                    :step=\"0.01\"\r\n                    controls-position=\"right\"\r\n                    placeholder=\"最小值\"\r\n                    style=\"width: 150px; margin-right: 10px;\"\r\n                ></el-input-number>\r\n                <el-input-number\r\n                    v-model=\"valuesRange[1]\"\r\n                    :min=\"Number(valuesRange[0])\"\r\n                    :max=\"Number(valuesRange[1])\"\r\n                    :step=\"0.01\"\r\n                    controls-position=\"right\"\r\n                    placeholder=\"最大值\"\r\n                    style=\"width: 150px; margin-left: 10px;\"\r\n                ></el-input-number>\r\n                <el-slider\r\n                    v-model=\"valuesRange\"\r\n                    :min=\"0\"\r\n                    :max=\"100\"\r\n                    :step=\"0.01\"\r\n                    show-tooltip\r\n                    range\r\n                    show-input\r\n                ></el-slider>\r\n              </div>\r\n            </template>\r\n          </el-row>\r\n        </el-row>\r\n\r\n      </div>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button size=\"small\" v-if=\"!isOperation\" style=\"background-color: rgb(43, 121, 203);border: none;\"\r\n                           class=\"customer\" type=\"info\" @click=\"addOperation\">新增</el-button>\r\n                <el-button size=\"small\" v-else style=\"background-color: rgb(43, 121, 203);border: none;\"\r\n                           class=\"customer\" type=\"info\" @click=\"updateOperation\">修改</el-button>\r\n                <el-button class=\"customer\" size=\"small\" style=\"background-color: rgb(241, 241, 241);border: none;\"\r\n                           @click=\"dialogUserOperaion = false\">取消</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </el-row>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      data: { cover:''},\r\n      currentPage: 1,\r\n      pageSize: 7,\r\n      totalItems: 0,\r\n      dialogUserOperaion: false, // 开关\r\n      isOperation: false, // 开关-标识新增或修改\r\n      tableData: [],\r\n      searchTime: [],\r\n      value: true,\r\n      selectedRows: [],\r\n      status: null,\r\n      healthModelConfigQueryDto: {}, // 搜索条件\r\n      messsageContent: '',\r\n      valuesRange: [0,0]\r\n\r\n\r\n    };\r\n  },\r\n\r\n  watch: {\r\n    dialogUserOperaion(v1, v2) {\r\n      if (!v1) {\r\n        this.isOperation = !this.isOperation;\r\n      }\r\n      if (!v1 && v2) {\r\n        this.data = {};\r\n      }\r\n    },\r\n  },\r\n  created() {\r\n    this.fetchFreshData();\r\n  },\r\n  methods: {\r\n\r\n    handleAvatarSuccess(res, file) {\r\n      if (res.code !== 200) {\r\n        this.$message.error(`健康模型封面上传异常`);\r\n        return;\r\n      }\r\n      this.$message.success(`健康模型封面上传成功`);\r\n      this.data.cover = res.data;\r\n    },\r\n    // 多选框选中\r\n    handleSelectionChange(selection) {\r\n      this.selectedRows = selection;\r\n    },\r\n    // 批量删除数据\r\n    async batchDelete() {\r\n      if (!this.selectedRows.length) {\r\n        this.$message(`未选中任何数据`);\r\n        return;\r\n      }\r\n      const confirmed = await this.$swalConfirm({\r\n        title: '删除健康模型数据',\r\n        text: `删除后不可恢复，是否继续？`,\r\n        icon: 'warning',\r\n      });\r\n      if (confirmed) {\r\n        try {\r\n          let ids = this.selectedRows.map(entity => entity.id);\r\n          const response = await this.$axios.post(`/healthModelConfig/batchDelete`, ids);\r\n          if (response.data.code === 200) {\r\n            this.$swal.fire({\r\n              title: '删除提示',\r\n              text: response.data.msg,\r\n              icon: 'success',\r\n              showConfirmButton: false,\r\n              timer: 2000,\r\n            });\r\n            this.fetchFreshData();\r\n            return;\r\n          }\r\n        } catch (e) {\r\n          this.$swal.fire({\r\n            title: '错误提示',\r\n            text: e,\r\n            icon: 'error',\r\n            showConfirmButton: false,\r\n            timer: 2000,\r\n          });\r\n          console.error(`健康模型信息删除异常：`, e);\r\n        }\r\n      }\r\n    },\r\n    resetQueryCondition() {\r\n      this.healthModelConfigQueryDto = {};\r\n      this.searchTime = [];\r\n      this.fetchFreshData();\r\n    },\r\n    // 修改信息\r\n    async updateOperation() {\r\n      try {\r\n        this.data.valueRange=this.valuesRange.join(',')\r\n        const response = await this.$axios.put('/healthModelConfig/update', this.data);\r\n        this.$swal.fire({\r\n          title: '健康模型信息修改',\r\n          text: response.data.msg,\r\n          icon: response.data.code === 200 ? 'success' : 'error',\r\n          showConfirmButton: false,\r\n          timer: 1000,\r\n        });\r\n        if (response.data.code === 200) {\r\n          this.closeDialog();\r\n          this.fetchFreshData();\r\n          this.clearFormData();\r\n        }\r\n      } catch (error) {\r\n        console.error('提交表单时出错:', error);\r\n        this.$message.error('提交失败，请稍后再试！');\r\n      }\r\n    },\r\n    // 信息新增\r\n    async addOperation() {\r\n      try {\r\n        this.data.valueRange=this.valuesRange.join(',')\r\n        const response = await this.$axios.post('/healthModelConfig/save', this.data);\r\n        this.$message[response.data.code === 200 ? 'success' : 'error'](response.data.msg);\r\n        if (response.data.code === 200) {\r\n          this.closeDialog();\r\n          this.fetchFreshData();\r\n          this.clearFormData();\r\n        }\r\n      } catch (error) {\r\n        console.error('提交表单时出错:', error);\r\n        this.$message.error('提交失败，请稍后再试！');\r\n      }\r\n    },\r\n    closeDialog() {\r\n      this.dialogUserOperaion = false;\r\n    },\r\n    clearFormData() {\r\n      this.data = {};\r\n    },\r\n    async fetchFreshData() {\r\n      try {\r\n        this.tableData = [];\r\n        let startTime = null;\r\n        let endTime = null;\r\n        if (this.searchTime != null && this.searchTime.length === 2) {\r\n          const [startDate, endDate] = await Promise.all(this.searchTime.map(date => date.toISOString()));\r\n          startTime = `${startDate.split('T')[0]}T00:00:00`;\r\n          endTime = `${endDate.split('T')[0]}T23:59:59`;\r\n        }\r\n        // 请求参数\r\n        const params = {\r\n          current: this.currentPage,\r\n          size: this.pageSize,\r\n          startTime: startTime,\r\n          endTime: endTime,\r\n          ...this.healthModelConfigQueryDto\r\n        };\r\n        const response = await this.$axios.post('/healthModelConfig/query', params);\r\n        const { data } = response;\r\n        this.tableData = data.data;\r\n        this.totalItems = data.total;\r\n      } catch (error) {\r\n        console.error('查询健康模型信息异常:', error);\r\n      }\r\n    },\r\n    add() {\r\n      this.dialogUserOperaion = true;\r\n    },\r\n    handleFilter() {\r\n      this.currentPage = 1;\r\n      this.fetchFreshData();\r\n    },\r\n    handleFilterClear() {\r\n      this.filterText = '';\r\n      this.handleFilter();\r\n    },\r\n    handleSizeChange(val) {\r\n      this.pageSize = val;\r\n      this.currentPage = 1;\r\n      this.fetchFreshData();\r\n    },\r\n    handleCurrentChange(val) {\r\n      this.currentPage = val;\r\n      this.fetchFreshData();\r\n    },\r\n    handleEdit(row) {\r\n      this.valuesRange = row.valueRange.split(',');\r\n      this.dialogUserOperaion = true;\r\n      this.isOperation = true;\r\n      row.userPwd = null;\r\n      this.data = { ...row}\r\n    },\r\n    handleDelete(row) {\r\n      this.selectedRows.push(row);\r\n      this.batchDelete();\r\n    }\r\n  },\r\n};\r\n</script>\r\n<style scoped lang=\"scss\">\r\n.tag-tip {\r\n  display: inline-block;\r\n  padding: 5px 10px;\r\n  border-radius: 5px;\r\n  background-color: rgb(245, 245, 245);\r\n  color: rgb(104, 118, 130);\r\n}\r\n\r\n.input-def {\r\n  height: 40px;\r\n  line-height: 40px;\r\n  outline: none;\r\n  border: none;\r\n  font-size: 20px;\r\n  color: rgb(102, 102, 102);\r\n  font-weight: 900;\r\n  width: 100%;\r\n}\r\n\r\n.dialog-footer {\r\n  /* 使按钮水平居中 */\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n/* 如果需要调整按钮之间的间距 */\r\n.customer {\r\n  margin: 0 8px;\r\n  /* 根据需要调整间距 */\r\n}\r\n</style>"]}]}